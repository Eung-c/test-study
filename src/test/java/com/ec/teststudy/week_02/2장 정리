[ 2장 리팩터링 원칙]

1.리펙터링?
 1.1 리팩터링 : 소프트웨어의 겉보기 동작은 그대로 유지한 채, 코드를 이해하고 수정하기 쉽도록 내부 구조를 변경하는 기법.

 1.2 리펙터링의 장점
      a. 소프트웨어 설계가 좋아진다.
      b. 소프트웨어 이해가 쉬워진다.
      c. 버그를 쉽게 찾을 수 있다.
      d. 프로그래밍 속도를 높일 수 있다.


2. 피렉터링은 언제?
 2.1 3법의법칙 : 1,2번 봐주다가 3번 거슬리면 그때 해라 
 2.2 리펙터링은 언제?
     준비를 위한 리펙터링, 이해를 위한 리펙터링, 쓰레기 줍기 리펙토링
     철저히 준비를 하고 충분히 이해 하고 정리 한 다음 
     
     너무 많은 사람들이 달라들어서 하는건 좋지 않음. 그냥 수시로(저자는 1시간에 한번씩 한다) 주기적으로 하는게 좋음.
     외부 연계와 같은 복잡한 롤이나 건들면 ㅈ되겠다 싶은건 하지 말자. ㅎ
     
     
